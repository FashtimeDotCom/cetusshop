# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-08-17 08:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=254, null=True, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=254, null=True)),
                ('middle_name', models.CharField(max_length=254, null=True)),
                ('last_name', models.CharField(max_length=254, null=True)),
                ('mobile_phone', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(max_length=3, null=True)),
                ('birthday', models.DateField(null=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_time', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'myuser',
            },
        ),
        migrations.CreateModel(
            name='Abnormal_Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100, null=True)),
                ('detail', models.TextField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useage', models.CharField(default='', max_length=254, null=True)),
                ('is_default', models.BooleanField(default=True)),
                ('first_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('province', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('district', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('address_line_1', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('address_line_2', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('tel', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('sign_building', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('best_time', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(max_length=100, verbose_name='对象类型')),
                ('item_id', models.IntegerField(default=0, verbose_name='对象ID')),
                ('image', models.URLField(verbose_name='图片链接')),
                ('thumb', models.URLField(verbose_name='缩略图链接')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '相册',
                'verbose_name_plural': '相册',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=254, null=True, verbose_name='标题')),
                ('category', models.CharField(blank=True, choices=[('0', '宣传博客'), ('10', '网站公告'), ('20', '站点信息')], max_length=10, null=True, verbose_name='文章分类')),
                ('content', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('keywords', models.CharField(blank=True, max_length=254, null=True, verbose_name='关键字')),
                ('page_title', models.CharField(blank=True, default='', max_length=100, verbose_name='网页标题')),
                ('short_desc', models.CharField(blank=True, default='', max_length=254, verbose_name='简略描述')),
                ('static_file_name', models.CharField(blank=True, db_index=True, max_length=254, null=True, unique=True, verbose_name='静态文件名')),
                ('folder', models.CharField(blank=True, max_length=254, null=True, verbose_name='静态文件目录')),
                ('breadcrumbs', models.CharField(blank=True, max_length=254, null=True, verbose_name='导航位置')),
                ('image', models.URLField(blank=True, null=True, verbose_name='图片链接')),
                ('detail_template', models.CharField(blank=True, default='', max_length=254, verbose_name='详情页指定模板')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='外部名称')),
                ('code', models.CharField(default='', max_length=100, verbose_name='内部代码')),
                ('position', models.IntegerField(default=0)),
                ('thumb', models.URLField(default=None, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '商品属性定义',
                'verbose_name_plural': '商品属性定义',
            },
        ),
        migrations.CreateModel(
            name='Attribute_Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('group_type', models.CharField(default='', max_length=100)),
                ('position', models.IntegerField(default=0)),
                ('code', models.CharField(default='', max_length=100)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '商品属性组定义',
                'verbose_name_plural': '商品属性组定义',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mycart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart_Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='shopcart.Cart')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, default='', max_length=100, unique=True, verbose_name='分类代码')),
                ('name', models.CharField(default='', max_length=100, verbose_name='分类名称')),
                ('page_title', models.CharField(blank=True, default='', max_length=100, verbose_name='网页标题')),
                ('keywords', models.CharField(blank=True, default='', max_length=254, verbose_name='关键字')),
                ('short_desc', models.CharField(blank=True, default='', max_length=254, verbose_name='简略描述')),
                ('sort_order', models.CharField(default='', max_length=100, verbose_name='排序序号')),
                ('detail_template', models.CharField(blank=True, default='', max_length=254, verbose_name='商品详情页指定模板')),
                ('category_template', models.CharField(blank=True, default='', max_length=254, verbose_name='分类指定模板')),
                ('static_file_name', models.CharField(blank=True, db_index=True, max_length=254, null=True, unique=True, verbose_name='静态文件名(不包含路径，以html结尾)')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrens', to='shopcart.Category', verbose_name='上级分类')),
            ],
            options={
                'verbose_name': '商品分类',
                'verbose_name_plural': '商品分类',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useage', models.CharField(max_length=100, unique=True)),
                ('email_address', models.EmailField(max_length=254, null=True)),
                ('title', models.CharField(max_length=254, verbose_name='邮件主题')),
                ('smtp_host', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('template', models.CharField(blank=True, max_length=254, null=True, verbose_name='模板组名称')),
                ('template_file', models.CharField(blank=True, max_length=254, null=True, verbose_name='模板文件名称')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Email_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='电子邮件')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '订阅邮件列表',
                'verbose_name_plural': '订阅邮件列表',
            },
        ),
        migrations.CreateModel(
            name='Express',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='快递名称')),
                ('price_fixed', models.FloatField(verbose_name='固定运费')),
                ('price_per_kilogram', models.FloatField(verbose_name='每千克运费')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '快递公司',
                'verbose_name_plural': '快递公司',
            },
        ),
        migrations.CreateModel(
            name='ExpressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='送货方式')),
                ('price_fixed', models.FloatField(verbose_name='固定运费')),
                ('price_per_kilogram', models.FloatField(verbose_name='每千克运费')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '送货方式',
                'verbose_name_plural': '送货方式',
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='对方称呼')),
                ('company', models.CharField(max_length=200, null=True, verbose_name='对方公司')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='电子邮件')),
                ('message', models.TextField(blank=True, verbose_name='询盘信息')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '询盘信息',
                'verbose_name_plural': '询盘信息',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='订单编号')),
                ('status', models.CharField(choices=[('0', '等待付款'), ('5', '已付款未确认'), ('10', '已付款'), ('20', '已发货'), ('30', '已完成'), ('40', '已取消'), ('90', '订单异常'), ('99', '订单已关闭')], default='0', max_length=32, verbose_name='订单状态')),
                ('shipping_status', models.CharField(blank=True, default='not yet', max_length=100, verbose_name='发货状态')),
                ('pay_status', models.CharField(blank=True, default='wait for payment', max_length=100)),
                ('country', models.CharField(blank=True, default='', max_length=100, verbose_name='国家')),
                ('province', models.CharField(blank=True, default='', max_length=100, verbose_name='省/州')),
                ('city', models.CharField(blank=True, default='', max_length=100, verbose_name='市')),
                ('district', models.CharField(blank=True, default='', max_length=100, verbose_name='区')),
                ('address_line_1', models.CharField(blank=True, default='', max_length=254, verbose_name='地址 1')),
                ('address_line_2', models.CharField(blank=True, default='', max_length=254, verbose_name='地址 2')),
                ('first_name', models.CharField(blank=True, default='', max_length=254, verbose_name='名')),
                ('last_name', models.CharField(blank=True, default='', max_length=254, verbose_name='姓')),
                ('zipcode', models.CharField(blank=True, default='', max_length=10, verbose_name='邮编')),
                ('tel', models.CharField(blank=True, default='', max_length=20, verbose_name='电话')),
                ('mobile', models.CharField(blank=True, default='', max_length=20)),
                ('email', models.CharField(blank=True, default='', max_length=100)),
                ('express_type_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='送货方式')),
                ('shipper_name', models.CharField(blank=True, default='', max_length=100, verbose_name='快递名称')),
                ('shpping_no', models.CharField(blank=True, default='', max_length=100, verbose_name='快递单号')),
                ('pay_id', models.CharField(blank=True, default='', max_length=100)),
                ('pay_name', models.CharField(blank=True, default='', max_length=100)),
                ('products_amount', models.FloatField(default=0.0)),
                ('shipping_fee', models.FloatField(default=0.0)),
                ('discount', models.FloatField(default=0.0)),
                ('order_amount', models.FloatField(default=0.0, verbose_name='订单总价')),
                ('money_paid', models.FloatField(default=0.0)),
                ('refer', models.CharField(blank=True, default='', max_length=10)),
                ('pay_time', models.DateTimeField(null=True)),
                ('shipping_time', models.DateTimeField(null=True)),
                ('to_seller', models.CharField(blank=True, max_length=100)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='下单日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Order_Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=0, verbose_name='商品编号')),
                ('name', models.CharField(default='', max_length=100, verbose_name='商品名称')),
                ('short_desc', models.CharField(default='', max_length=254)),
                ('price', models.FloatField(verbose_name='商品价格')),
                ('thumb', models.URLField()),
                ('image', models.URLField()),
                ('quantity', models.IntegerField(default=0, verbose_name='订购数量')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='shopcart.Order')),
            ],
            options={
                'verbose_name': '订单商品',
                'verbose_name_plural': '订单商品',
            },
        ),
        migrations.CreateModel(
            name='OrderRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=254, null=True, verbose_name='备注内容')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_remarks', to='shopcart.Order')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_remarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '订单备注',
                'verbose_name_plural': '订单备注',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.CharField(blank=True, db_index=True, default='', max_length=100, verbose_name='商品编号')),
                ('name', models.CharField(default='', max_length=100, verbose_name='商品名称')),
                ('click_count', models.IntegerField(default=0, verbose_name='浏览次数')),
                ('quantity', models.IntegerField(default=0, verbose_name='库存数量')),
                ('warn_quantity', models.IntegerField(default=0, verbose_name='预警库存')),
                ('price', models.FloatField(default=0.0, verbose_name='基准价格')),
                ('market_price', models.FloatField(default=0.0, verbose_name='市场价')),
                ('page_title', models.CharField(blank=True, default='', max_length=100, verbose_name='网页标题')),
                ('keywords', models.CharField(blank=True, default='', max_length=254, verbose_name='关键字')),
                ('short_desc', models.CharField(blank=True, default='', max_length=254, verbose_name='简略描述')),
                ('description', models.TextField(blank=True, verbose_name='详细描述')),
                ('thumb', models.URLField(verbose_name='主缩略图')),
                ('image', models.URLField(verbose_name='主图大图')),
                ('is_free_shipping', models.BooleanField(default=False, verbose_name='是否包邮')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序序号')),
                ('static_file_name', models.CharField(blank=True, db_index=True, max_length=254, null=True, unique=True, verbose_name='静态文件名(不包含路径，以html结尾)')),
                ('min_order_quantity', models.IntegerField(default=0, verbose_name='最小下单数量')),
                ('is_publish', models.BooleanField(default=False, verbose_name='上架')),
                ('detail_template', models.CharField(blank=True, default='', max_length=254, verbose_name='详情页指定模板')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('categorys', models.ManyToManyField(to='shopcart.Category', verbose_name='商品分类')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
            },
        ),
        migrations.CreateModel(
            name='Product_Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_item_number', models.CharField(db_index=True, default='', max_length=100)),
                ('quantity', models.IntegerField(default=0)),
                ('price_adjusment', models.FloatField()),
                ('name', models.CharField(default='', max_length=254)),
                ('min_order_quantity', models.IntegerField(default=0, verbose_name='最小下单数量')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('attribute', models.ManyToManyField(null=True, to='shopcart.Attribute')),
            ],
            options={
                'verbose_name': '商品属性',
                'verbose_name_plural': '商品属性',
            },
        ),
        migrations.CreateModel(
            name='Product_Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.URLField(null=True)),
                ('image', models.URLField(null=True)),
                ('is_show_in_product_detail', models.BooleanField(default=False, verbose_name='是否在商品详情中展示')),
                ('sort', models.IntegerField(default=0, verbose_name='排序序号')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shopcart.Product', verbose_name='关联的商品')),
            ],
            options={
                'verbose_name': '商品相册',
                'verbose_name_plural': '商品相册',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=100, verbose_name='促销码')),
                ('is_reuseable', models.BooleanField(verbose_name='可否重复使用')),
                ('is_valid', models.BooleanField(verbose_name='是否有效')),
                ('valid_date_begin', models.DateTimeField(verbose_name='有效期开始时间')),
                ('valid_date_end', models.DateTimeField(verbose_name='有效期结束时间')),
                ('discount_condition', models.CharField(blank=True, max_length=255, null=True, verbose_name='优惠条件(表达式)')),
                ('discount_type', models.CharField(max_length=20, verbose_name='优惠方式')),
                ('discount', models.CharField(max_length=255, verbose_name='优惠额或公式')),
                ('item_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='优惠对象类型')),
                ('item_id', models.IntegerField(blank=True, null=True, verbose_name='优惠对象ID')),
                ('impl_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='优惠插件名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '促销代码',
                'verbose_name_plural': '促销代码',
            },
        ),
        migrations.CreateModel(
            name='Reset_Password',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('validate_code', models.CharField(max_length=254)),
                ('is_active', models.BooleanField(default=False)),
                ('apply_time', models.DateTimeField()),
                ('expirt_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Serial_Number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_date', models.CharField(max_length=8, unique=True)),
                ('serial_number', models.IntegerField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='System_Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='参数名称')),
                ('val', models.CharField(max_length=254, verbose_name='参数值')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '系统参数',
                'verbose_name_plural': '系统参数',
            },
        ),
        migrations.CreateModel(
            name='Wish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopcart.Product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wishs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product_attribute',
            name='image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopcart.Product_Images'),
        ),
        migrations.AddField(
            model_name='product_attribute',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='shopcart.Product'),
        ),
        migrations.AddField(
            model_name='order_products',
            name='product_attribute',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopcart.Product_Attribute'),
        ),
        migrations.AddField(
            model_name='express',
            name='express_type',
            field=models.ManyToManyField(null=True, related_name='expresses', to='shopcart.ExpressType'),
        ),
        migrations.AddField(
            model_name='cart_products',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopcart.Product'),
        ),
        migrations.AddField(
            model_name='cart_products',
            name='product_attribute',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopcart.Product_Attribute'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='shopcart.Attribute_Group'),
        ),
        migrations.AddField(
            model_name='abnormal_order',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abnormal_orders', to='shopcart.Order'),
        ),
    ]
